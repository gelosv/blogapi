// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  WRITER
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  lastname  String?
  nickname  String
  password  String
  createdAt DateTime @default(now())
  rol Role @default(USER)

  posts         Post[]
  UserLikedPost UserLikedPost[]
  PostComments  PostComments[]
}

model Categorie {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  Post      Post[]
}

model Post {
  id      Int    @id @default(autoincrement())
  title   String
  content String @db.Text
  image   String?

  writer   User @relation(fields: [writerId], references: [id])
  writerId Int

  categorie  Categorie? @relation(fields: [categorieId], references: [id])
  categorieId Int?

  UserLikedPost UserLikedPost[]
  PostComments  PostComments[]

  createdAt DateTime @default(now())
}

model UserLikedPost {
  user   User @relation(fields: [userId], references: [id])
  userId Int

  post   Post @relation(fields: [postId], references: [id])
  postId Int

  @@id([postId, userId])
}

model PostComments {
  id      Int    @id @default(autoincrement())
  content String

  post   Post @relation(fields: [postId], references: [id])
  postId Int

  user   User @relation(fields: [userId], references: [id])
  userId Int
}
